

#ifndef YYST_TOK

#define YYST_TOK  1
#define YYST_RULE  2

#endif

#ifndef YYTOKTYP_DEFINED
#define YYTOKTYP_DEFINED

static const unsigned char yytoktyp[] = 
{
  0, 0, 0, 0, YYST_TOK, 
  YYST_TOK, YYST_TOK, YYST_TOK, YYST_TOK, YYST_TOK, 
  YYST_TOK, YYST_TOK, YYST_TOK, YYST_TOK, YYST_TOK, 
  YYST_TOK, YYST_TOK, YYST_TOK, YYST_TOK, YYST_TOK, 
  YYST_TOK, YYST_TOK, YYST_TOK, YYST_TOK, YYST_TOK, 
  YYST_TOK, YYST_TOK, YYST_TOK, YYST_TOK, YYST_TOK, 
  0, 0, 0, YYST_TOK, YYST_TOK, 
  YYST_TOK, YYST_TOK, YYST_TOK, YYST_TOK, 0, 
  YYST_TOK, YYST_TOK, YYST_TOK, YYST_TOK, YYST_TOK, 
  YYST_TOK, YYST_TOK, 0, 0, 0, 
  YYST_TOK, 0, 0, 0, 0, 
  0, YYST_RULE, YYST_RULE, 0, 0, 
  0, YYST_TOK, YYST_TOK, YYST_TOK, YYST_TOK, 
  YYST_TOK, YYST_TOK, YYST_TOK, YYST_TOK
};

#endif

#ifndef YYTOKDESC_DEFINED
#define YYTOKDESC_DEFINED

static const char * const yytokdesc[] = 
{
  0, 0, 0, "{ action }", "{ action }", 
  "%{ code section }", "%left", "%nonassoc", "%right", "%start", 
  "%token", "%type", "%union", "%prec", "%expect", 
  "%<<reserved>>", "first '%%'", "terminating '%%'", "identifier", "\"string constant\"", 
  "'character constant'", "number", "<semantic type>", 0, 0, 
  ":", ";", "|", "(", ")", 
  0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 
  0, 0, 0, 0
};

#endif



#ifndef YYSTATETYP_DEFINED
#define YYSTATETYP_DEFINED

static const unsigned char yystatetyp[] =
{
  0,
  YYST_TOK, 	/*   1:C_SECTION */
  YYST_TOK, 	/*   2:c_section_opt */
  YYST_TOK, 	/*   3:decl_list */
  YYST_TOK, 	/*   4:LEFT */
  YYST_TOK, 	/*   5:NONASSOC */
  YYST_TOK, 	/*   6:RIGHT */
  YYST_TOK, 	/*   7:TOKEN */
  YYST_TOK, 	/*   8:TYPE */
  YYST_TOK, 	/*   9:UNION */
  YYST_TOK, 	/*  10:EXPECT */
  YYST_TOK, 	/*  11:SECTION */
  YYST_TOK, 	/*  12:decl */
  YYST_TOK, 	/*  13:any_decl */
  0, 	/*  14:ACTION1 */
  YYST_TOK, 	/*  15:action */
  YYST_TOK, 	/*  16:NUMBER */
  YYST_TOK, 	/*  17:prod_list */
  YYST_TOK, 	/*  18:SEMTYPE */
  YYST_TOK, 	/*  19:opt_sem_type */
  YYST_TOK, 	/*  20:sem_type */
  YYST_TOK, 	/*  21:ACTION2 */
  YYST_TOK, 	/*  22:TYPE */
  YYST_TOK, 	/*  23:END_SECTION */
  YYST_TOK, 	/*  24:IDENT */
  YYST_TOK, 	/*  25:prod */
  YYST_TOK, 	/*  26:prod_head */
  YYST_TOK, 	/*  27:prod_ident */
  YYST_TOK, 	/*  28:IDENT */
  YYST_TOK, 	/*  29:CHAR */
  YYST_TOK, 	/*  30:decl_ident_list */
  YYST_TOK, 	/*  31:decl_ident_or_char */
  YYST_TOK, 	/*  32:ident_or_char */
  YYST_TOK, 	/*  33:id_or_char */
  YYST_TOK, 	/*  34:sem_type */
  YYST_TOK, 	/*  35:':' */
  YYST_TOK, 	/*  36:'(' */
  0, 	/*  37:params_decl_opt */
  YYST_TOK, 	/*  38:@1 */
  0, 	/*  39:'/' */
  0, 	/*  40:description_opt */
  YYST_TOK, 	/*  41:prod_ident */
  YYST_RULE, 	/*  42:alt_list */
  YYST_RULE, 	/*  43:rule */
  0, 	/*  44:@6 */
  YYST_TOK, 	/*  45:')' */
  YYST_TOK, 	/*  46:@4 */
  YYST_TOK, 	/*  47:@3 */
  YYST_TOK, 	/*  48:decl_ident_or_char */
  YYST_TOK, 	/*  49:C_STRING */
  0, 	/*  50:params_decl_opt */
  YYST_TOK, 	/*  51:';' */
  YYST_TOK, 	/*  52:'|' */
  YYST_TOK, 	/*  53:PREC */
  YYST_TOK, 	/*  54:action */
  YYST_TOK, 	/*  55:ident_or_char */
  0, 	/*  56:sym_list_opt */
  0, 	/*  57:sym_list */
  YYST_TOK, 	/*  58:symbol_invoke */
  YYST_TOK, 	/*  59:symbol */
  YYST_TOK, 	/*  60:sym_ident */
  0, 	/*  61:'$' */
  0, 	/*  62:param_decl_list */
  0, 	/*  63:param_decl */
  0, 	/*  64:description_opt */
  YYST_TOK, 	/*  65:@2 */
  YYST_RULE, 	/*  66:alt_list */
  YYST_TOK, 	/*  67:ident_or_char */
  YYST_TOK, 	/*  68:symbol_invoke */
  YYST_TOK, 	/*  69:'(' */
  YYST_TOK, 	/*  70:call */
  YYST_TOK, 	/*  71:sem_type */
  YYST_TOK, 	/*  72:')' */
  0, 	/*  73:',' */
  0, 	/*  74:description_opt */
  0, 	/*  75:'$' */
  YYST_TOK, 	/*  76:action */
  YYST_TOK, 	/*  77:arg_list */
  YYST_TOK, 	/*  78:arg */
  YYST_TOK, 	/*  79:IDENT */
  YYST_TOK, 	/*  80:@5 */
  YYST_TOK, 	/*  81:IDENT */
  YYST_TOK, 	/*  82:opt_sem_type */
  YYST_TOK, 	/*  83:')' */
  0, 	/*  84:',' */
  0, 	/*  85:param_decl */
  YYST_TOK, 	/*  86:NUMBER */
  YYST_TOK, 	/*  87:arg */
  YYST_TOK, 	/*  88:grammar */
  0, 	/*  89:$ */
  0, 	/*  90:$ */
};

#endif

